# Generated by Django 5.2.1 on 2025-05-28 20:53

import datetime
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('admin_panel', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='sitesettings',
            name='auto_approve_uploads',
            field=models.BooleanField(default=False, help_text='Automatically approve user file uploads'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='daily_reminder_time',
            field=models.TimeField(default=datetime.time(18, 0), help_text='Default time for daily learning reminders'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='default_hero_image',
            field=models.ImageField(blank=True, help_text='Default hero image when no custom hero is set', null=True, upload_to='defaults/'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='default_subject_icon',
            field=models.ImageField(blank=True, help_text='Default icon for subjects without custom icons', null=True, upload_to='defaults/'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='default_user_avatar',
            field=models.ImageField(blank=True, help_text='Default avatar image for users without profile pictures', null=True, upload_to='defaults/'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='enable_achievements',
            field=models.BooleanField(default=True, help_text='Enable achievement badges and rewards system'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='enable_content_moderation',
            field=models.BooleanField(default=True, help_text='Enable automatic content moderation'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='enable_leaderboards',
            field=models.BooleanField(default=False, help_text='Show leaderboards and competitive features'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='enable_offline_mode',
            field=models.BooleanField(default=True, help_text='Allow users to download content for offline learning'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='enable_progress_tracking',
            field=models.BooleanField(default=True, help_text='Track and display user learning progress'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='enable_push_notifications',
            field=models.BooleanField(default=True, help_text='Enable browser push notifications'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='enable_sms_notifications',
            field=models.BooleanField(default=False, help_text='Enable SMS notifications (requires SMS service setup)'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='enable_user_registration',
            field=models.BooleanField(default=True, help_text='Allow new users to register accounts'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='max_login_attempts',
            field=models.PositiveIntegerField(default=5, help_text='Maximum failed login attempts before account lockout', validators=[django.core.validators.MinValueValidator(3), django.core.validators.MaxValueValidator(20)]),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='require_strong_passwords',
            field=models.BooleanField(default=True, help_text='Enforce strong password requirements'),
        ),
        migrations.AddField(
            model_name='sitesettings',
            name='session_timeout_minutes',
            field=models.PositiveIntegerField(default=60, help_text='User session timeout in minutes', validators=[django.core.validators.MinValueValidator(5), django.core.validators.MaxValueValidator(480)]),
        ),
        migrations.AlterField(
            model_name='sitesettings',
            name='allowed_file_types',
            field=models.TextField(default='pdf,doc,docx,txt,jpg,jpeg,png,gif,mp4,mp3,webp', help_text='Comma-separated list of allowed file extensions'),
        ),
    ]
